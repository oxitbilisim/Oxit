// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Oxit.DataAccess.EntityFramework;

#nullable disable

namespace Oxit.DataAccess.Migrations
{
    [DbContext(typeof(appDbContext))]
    [Migration("20211122112331_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Oxit.Common.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("EditorId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Person", (string)null);

                    b
                        .HasAnnotation("SqlServer:IsTemporal", true)
                        .HasAnnotation("SqlServer:TemporalHistoryTableName", "EmployeeHistoricalData")
                        .HasAnnotation("SqlServer:TemporalHistoryTableSchema", null)
                        .HasAnnotation("SqlServer:TemporalPeriodEndPropertyName", "ValidTo")
                        .HasAnnotation("SqlServer:TemporalPeriodStartPropertyName", "ValidFrom");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c569ade6-116f-4e63-be5c-b38009299857"),
                            Active = true,
                            IsDeleted = false,
                            Name = "Ali"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
