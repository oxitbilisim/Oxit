@using Oxit.Domain.Models
@model Dictionary<string, object>
@{
    
    HesapPlani hesapPlani = (HesapPlani)Model["hesapPlani"];
    List<Fis> fisList = (List<Fis>)Model["fisList"];
    int pageCount = (int)Model["pageCount"];
    int page = (int)Model["page"];
    
    ViewData["Title"] = "Şirketler | "+hesapPlani.Ad;
}
<div class="callout @(hesapPlani.Aktif ? "callout-success" : "callout-danger")  bg-white" style="border-left-width: 8px;">
    <h4>@hesapPlani.Ad</h4>
</div>


<div class="card text-center">
  <div class="card-header">
      <button class="btn btn-sm btn-success" type="button" id="gecikmeHesapla" onclick="gecikmeHesapla()">Geçikme Hesapla</button>
      <button class="btn btn-sm btn-danger" type="button" id="gecikmeHesapla" onclick="gecikmeleriSifirla()">Gecikmeleri Sıfırla</button>
      <a class="btn btn-sm btn-info" href="@Url.Action("Edit","Cari",new {hesapId = hesapPlani.Id ,page = page})">Düzenle</a>
  </div>
  <div class="card-body">
    <table class="table table-striped table-hover">
      <thead>
          <tr>
              <th scope="col">Fiş Türü</th>
              <th scope="col">Tarih</th>
              <th scope="col">Borç</th>
              <th scope="col">Alacak</th>

              <th scope="col">Gecikme Tutarı</th>
              <th scope="col">Gecikme Günü</th>
              <th scope="col">Açıklama</th>
              <th scope="col">Son Hesaplama Tarihi</th>
              <th scope="col">Kalan Tutar</th>
          </tr>
      </thead>
      <tbody>
      @foreach (var f in fisList)
      {
          <tr>
              <td>@Html.DisplayFor(m => f.FisTip)</td>
              <td>@Html.DisplayFor(m => f.Tarih)</td>
              <td>@Html.DisplayFor(m => f.Borc)@(f.Borc != null? " ₺ ":"")</td>
              <td>@Html.DisplayFor(m => f.Alacak)@(f.Alacak != null? " ₺ ":"")</td>
              <td>@Html.DisplayFor(m => f.GecikmeTutari)@(f.GecikmeTutari != null? " ₺ ":"")</td>
              <td>@Html.DisplayFor(m => f.GecikmeGunu)</td>
              <td>@Html.DisplayFor(m => f.Aciklama)</td>
              <td>@Html.DisplayFor(m => f.SonHesaplananGecikmeTarihi)</td>
              <td>@Html.DisplayFor(m => f.KalanTutar)</td>
              <td></td>
              <td></td>
          </tr>
      }
      </tbody>
    </table>
  </div>
</div>





<nav aria-label="Page navigation example">
    <ul class="pagination">
        @if (page>1)
        {
            <li class="page-item"><a class="page-link" href="@Url.Action("Index","Cari",new {hesapId = hesapPlani.Id ,page = page-1})" aria-label="Previous"><span aria-hidden="true">«</span></a></li>
        }
        
        @for (int i = 1; i<=pageCount;i++)
        {
            <li class="page-item"><a class="page-link" href="@Url.Action("Index","Cari",new {hesapId = hesapPlani.Id ,page = i})">@i</a></li>
        }
        
        @if (page < pageCount)
        {
            <li class="page-item"><a class="page-link" href="@Url.Action("Index","Cari",new {hesapId = hesapPlani.Id ,page = page+1})" aria-label="Next"><span aria-hidden="true">»</span></a></li>
        }
    </ul>
</nav>

<script>
function gecikmeHesapla(){
    $.ajax({
                 type: "get",
                 url: "@Url.Action("GecikmeleriHesapla","GecikmeHesapla", new {hesapKodu = hesapPlani.Kod})",
                 dataType:"json",
                 success: function(response){
                     window.location.reload();
                 },
                 error: function(jqXHR){
                     if (jqXHR.status != 200) {
                         alert("Geçikmeler hesaplanamdı!");
                     }else{
                         window.location.reload();
                     }
                 }
        });
}
function gecikmeleriSifirla(){
    $.ajax({
                 type: "get",
                 url: "@Url.Action("GecikmeleriSifirla","GecikmeHesapla", new {hesapKodu = hesapPlani.Kod})",
                 dataType:"json",
                 success: function(response){
                     window.location.reload();
                 },
                 error: function(jqXHR){
                     if (jqXHR.status != 200) {
                        alert("Geçikmeler sıfırlanamadı!");
                     }else{
                        window.location.reload();
                     }
                 }
        });
}

</script>